{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\charl\\\\Documents\\\\ING4\\\\Web\\\\Projet\\\\projetweb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\charl\\\\Documents\\\\ING4\\\\Web\\\\Projet\\\\projetweb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\charl\\\\Documents\\\\ING4\\\\Web\\\\Projet\\\\projetweb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\charl\\\\Documents\\\\ING4\\\\Web\\\\Projet\\\\projetweb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\charl\\\\Documents\\\\ING4\\\\Web\\\\Projet\\\\projetweb\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\charl\\\\Documents\\\\ING4\\\\Web\\\\Projet\\\\projetweb\\\\src\\\\container\\\\widget\\\\pic.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nvar colors = scaleOrdinal(schemeCategory10).range();\nvar data = [{\n  name: 'Page A',\n  uv: 4000,\n  female: 2400,\n  male: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  female: 1398,\n  male: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  female: 9800,\n  male: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  female: 3908,\n  male: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  female: 4800,\n  male: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  female: 3800,\n  male: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  female: 4300,\n  male: 2100\n}];\n\nvar getPath = function getPath(x, y, width, height) {\n  return \"M\".concat(x, \",\").concat(y + height, \"\\n          C\").concat(x + width / 3, \",\").concat(y + height, \" \").concat(x + width / 2, \",\").concat(y + height / 3, \" \").concat(x + width / 2, \", \").concat(y, \"\\n          C\").concat(x + width / 2, \",\").concat(y + height / 3, \" \").concat(x + 2 * width / 3, \",\").concat(y + height, \" \").concat(x + width, \", \").concat(y + height, \"\\n          Z\");\n};\n\nvar TriangleBar = function TriangleBar(props) {\n  var fill = props.fill,\n      x = props.x,\n      y = props.y,\n      width = props.width,\n      height = props.height;\n  return React.createElement(\"path\", {\n    d: getPath(x, y, width, height),\n    stroke: \"none\",\n    fill: fill,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  });\n};\n\nTriangleBar.propTypes = {\n  fill: PropTypes.string,\n  x: PropTypes.number,\n  y: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number\n};\n\nvar Pic =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Pic, _PureComponent);\n\n  function Pic() {\n    _classCallCheck(this, Pic);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Pic).apply(this, arguments));\n  }\n\n  _createClass(Pic, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BarChart, {\n        width: 500,\n        height: 300,\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"female\",\n        fill: \"#8884d8\",\n        shape: React.createElement(TriangleBar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }),\n        label: {\n          position: 'top'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, data.map(function (entry, index) {\n        return React.createElement(Cell, {\n          key: \"cell-\".concat(index),\n          fill: colors[index % 20],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Pic;\n}(PureComponent);\n\nPic.jsfiddleUrl = 'https://jsfiddle.net/alidingling/rnywhbu8/';\nexport { Pic as default };","map":{"version":3,"sources":["C:\\Users\\charl\\Documents\\ING4\\Web\\Projet\\projetweb\\src\\container\\widget\\pic.js"],"names":["React","PureComponent","PropTypes","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","scaleOrdinal","schemeCategory10","colors","range","data","name","uv","female","male","getPath","x","y","width","height","TriangleBar","props","fill","propTypes","string","number","Pic","top","right","left","bottom","position","map","entry","index","jsfiddleUrl"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\nimport { scaleOrdinal } from 'd3-scale';\r\nimport { schemeCategory10 } from 'd3-scale-chromatic';\r\n\r\nconst colors = scaleOrdinal(schemeCategory10).range();\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, female: 2400, male: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, female: 1398, male: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, female: 9800, male: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, female: 3908, male: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 1890, female: 4800, male: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, female: 3800, male: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, female: 4300, male: 2100,\r\n  },\r\n];\r\n\r\nconst getPath = (x, y, width, height) => `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${x + width / 2}, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + 2 * width / 3},${y + height} ${x + width}, ${y + height}\r\n          Z`;\r\n\r\nconst TriangleBar = (props) => {\r\n  const {\r\n    fill, x, y, width, height,\r\n  } = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n\r\nexport default class Pic extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/rnywhbu8/';\r\n\r\n  render() {\r\n    return (\r\n      <BarChart\r\n        width={500}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 20, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Bar dataKey=\"female\" fill=\"#8884d8\" shape={<TriangleBar />} label={{ position: 'top' }}>\r\n          {\r\n            data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n            ))\r\n          }\r\n        </Bar>\r\n      </BarChart>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}